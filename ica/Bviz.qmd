---
title: "Bviz"
format: html
---

```{r}
library(ggplot2)
library(tidyverse)
```


# Import data
```{r}
survey <- read.csv("https://ajohns24.github.io/data/112/about_us_2024.csv")
```
# How many students have now filled out the survey?


# What type of variables do we have?

```{r}
ggplot(survey, aes(x=hangout)) +
  geom_bar(color = "orange") +
  theme_minimal()
```
```{r}
ggplot(survey, aes(x = fave_temp)) +
  geom_density(fill = "red") +
  labs(x = "Favorite Temp. (C)")
```
```{r}
ggplot(survey, aes(x=fave_temp)) + 
  geom_histogram(color = "white")
```
**Exercises**
#Exercise 0
```{r}
elections <- read.csv("https://mac-stat.github.io/data/election_2020_county.csv")

# Check it out
head(elections)
```
```{r}
ggplot(elections,aes(x=winner_20)) +
  geom_bar()
```
```{r}
ggplot(elections, aes(x=repub_pct_20)) +
  geom_histogram(color="white")
```
 - Data is skewed left

#1
```{r}
#ggplot(elections, aes(x=repub_pct_16, y=repub_pct_20)) +
  #geom_dotplot() #incorrect
```
#2
```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point(shape=3, color="orange") +
  geom_text(aes(label=state_abbr))
```
#3
There is a positive strong relationship between support in 2020 and 20216. There are no outliers in relationship.

#4
```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point() +
  geom_smooth()
```
```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_smooth()
```

```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point() +
  geom_smooth(method="lm")
```
#5

```{r}
ggplot(elections, aes(y=repub_pct_20, median_rent)) +
  geom_point() +
  geom_smooth()
```
There is somewhat of a linear negative relationship between repub_pct_20 and median_rent.
```{r}
ggplot(elections, aes(y=repub_pct_20, median_age)) +
  geom_point()
```
There doesn't seem to be any correlation or pattern between support and median age.
*Median rent* is a better predictor of republican support

#6
```{r}
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_point()
```
It doesn't do a good job of telling us anything useful
#7
```{r}
# Side-by-side violin plots
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_violin()
# Side-by-side boxplots (defined below)
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_boxplot()
```
We can see that there was over 50% republican support in 2020 for each group. Historically red had greater support than each of the other groups.

#8
```{r}
#ggplot(elections, aes(x = repub_pct_20)) +
  #geom_density(fill(red)="red")
```


```{r}
# Name two "bad" things about this plot
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density()
#1. Can't see the entirety of each of the data sets
#2. The colors of the data don't match their color names
```
```{r}
# What does scale_fill_manual do?
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density() +
  scale_fill_manual(values = c("blue", "purple", "red"))
# It allows you to manually choose the colors of each data set
```

```{r}
# What does alpha = 0.5 do?
# Play around with different values of alpha, between 0 and 1
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density(alpha = 0.5) +
  scale_fill_manual(values = c("blue", "purple", "red"))
#It makes the colors (fill) transparent so you can see all of each of the data sets
#Closer to one makes it less transparent closer to zero makes it more transparent
```
```{r}
# What does facet_wrap do?!
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density() +
  scale_fill_manual(values = c("blue", "purple", "red")) +
  facet_wrap(~ historical)
#It splits up the data giving them their own chunks, their own graphs essentially
```
```{r}
# Let's try a similar grouping strategy with a histogram instead of density plot.
# Why is this terrible?
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_histogram(color = "white") +
  scale_fill_manual(values = c("blue", "purple", "red"))
# You again can't see a lot of the minnimums for the groups
```
#10
Which do you like best?
- Probably box plot because it illustrates data in a useful, quantatative, easy to read way

What is one pro of density plots relative to boxplots?

What is one con of density plots relative to boxplots?
The y-axis is relative rather than the specific pieces of data in the set

#11
```{r}
# Plot 1: adjust this to recreate the top plot
ggplot(elections, aes(x = historical, fill=winner_20)) +
  geom_bar()
```
```{r}
# Plot 2: adjust this to recreate the bottom plot
ggplot(elections, aes(x = winner_20)) +
  geom_bar() +
  facet_wrap(~historical)
```
#12
```{r}
# A stacked bar plot
# How are the "historical" and "winner_20" variables mapped to the plot, i.e. what roles do they play?
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar()
# Who won is put on the x-axis (grouping of the bars) and the y-axis is the winner (how high the bars are)
```
```{r}
# A faceted bar plot
ggplot(elections, aes(x = winner_20)) +
  geom_bar() +
  facet_wrap(~ historical)
```
```{r}
# A side-by-side bar plot
# Note the new argument to geom_bar
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar(position = "dodge")
```
```{r}
# A proportional bar plot
# Note the new argument to geom_bar
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar(position = "fill")
```
Pro of using proportional bar plot is now the count is going up to one so it may be easier to deterimine the areas of each group

I like side by side because it's clearer to me. The other two versions in this case make it seem as if the smaller one (dem) is larger because it is above but it is clear that it is less when side by side is used
#13
```{r}
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv")
```
# How do 3pm temperatures (temp3pm) differ by location?
```{r}
ggplot(weather, aes(y=temp3pm, x=location)) +
  geom_boxplot()
```

# How might we predict the 3pm temperature (temp3pm) by the 9am temperature (temp9am)?
```{r}
ggplot(weather, aes(x=temp9am, y=temp3pm)) +
  geom_point() 
```


# How do the number of rainy days (raintoday) differ by location?
```{r}
ggplot(weather, aes(x=location, fill = raintoday)) +
  geom_bar()
```

